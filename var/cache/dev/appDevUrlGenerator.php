<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appDevUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\MainController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_parent_registration' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\RegistrationParentController::registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/register/parent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_prof_registration' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\RegistrationProfController::registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/register/prof',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_dashboard' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\DashboardController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/dashboard',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_avis_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\AvisController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/avis/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_avis_voir' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\AvisController::voirAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/user/avis/voir',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_avis_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\AvisController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/user/avis/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_avis_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\AvisController::updateAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/user/avis/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_avis' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\AvisController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/avis',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_prof_indisponibilite' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\IndisponibiliteController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/prof/indisponibilite',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_prof_indisponibilite_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\IndisponibiliteController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/prof/indisponibilite/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_prof_indisponibilite_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\IndisponibiliteController::updateAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/user/prof/indisponibilite/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_prof_indisponibilite_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\IndisponibiliteController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/user/prof/indisponibilite/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_message_send' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\MessageController::sendAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/messages/send',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_message_receive' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\MessageController::receiveAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/messages/receive',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_message_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\MessageController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/message/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_message_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\MessageController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/user/message/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_message_voir' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\MessageController::voirAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/user/message',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_prof_cours' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\CoursController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/prof/cours',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_prof_cours_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\CoursController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/prof/cours/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_prof_cours_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\CoursController::updateAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/user/prof/cours/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_prof_cours_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\CoursController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/user/prof/cours/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_prof_evaluation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\EvaluationController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/prof/evaluations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_prof_evaluation_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\EvaluationController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/prof/evaluations/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_prof_evaluation_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\EvaluationController::updateAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/user/prof/evaluations/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_prof_evaluation_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\EvaluationController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/user/prof/evaluations/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_prof_seance_de_cours' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\SeanceDeCoursController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/prof/seance-de-cours/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_prof_seance_de_cours_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\SeanceDeCoursController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/prof/seance-de-cours/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_prof_seance_de_cours_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\SeanceDeCoursController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/user/prof/seance-de-cours/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_prof_seance_de_cours_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\SeanceDeCoursController::updateAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/user/prof/seance-de-cours/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_anomalies' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\AnomalieController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/anomalies',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_anomalie_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\AnomalieController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/anomalie/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_anomalie_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\AnomalieController::updateAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/user/anomalie/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_anomalie_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\AnomalieController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/user/anomalie/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_nouvelles_categories_cours' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\NouvelleCategorieCoursController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/nouvelles-categories-cours',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_nouvelle_categorie_cours_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\NouvelleCategorieCoursController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/nouvelle-categorie-cours/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_nouvelle_categorie_cours_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\NouvelleCategorieCoursController::updateAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/user/nouvelle-categorie-cours/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_nouvelle_categorie_cours_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\NouvelleCategorieCoursController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/user/nouvelle-categorie-cours/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_mes_reservations' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\ReservationController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/mes-reservations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_prof_demandes_de_cours' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\MesDemandesDeCoursController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/prof/mes-demandes-de-cours',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_user_prof_demande_de_cours_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\MesDemandesDeCoursController::editAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/user/prof/demande-de-cours/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_reservation_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LGPReservationBundle:Default:index',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reservation/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_reservation_detail' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LGP\\ReservationBundle\\Controller\\ReservationController::detailAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/reservation/detail',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_reservation_confirm' => array (  0 =>   array (    0 => 'userId',  ),  1 =>   array (    '_controller' => 'LGP\\ReservationBundle\\Controller\\ReservationController::confirmReservationAction',  ),  2 =>   array (    'userId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'userId',    ),    1 =>     array (      0 => 'text',      1 => '/reservation/cart/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_reservation_confirm_page' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LGP\\ReservationBundle\\Controller\\ReservationController::confirmviewReservationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reservation/confirmation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_reservation_paiement' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LGP\\ReservationBundle\\Controller\\ReservationController::paiementModeAction',  ),  2 =>   array (    'userId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reservation/paiement',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_reservation_cart' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LGP\\ReservationBundle\\Controller\\CartController::cartAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reservation/cart',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_reservation_cart_update_paiement' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LGP\\ReservationBundle\\Controller\\CartController::cartUpdatePaiementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reservation/cart/paiement',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_reservation_cart_add' => array (  0 =>   array (    0 => 'profId',  ),  1 =>   array (    '_controller' => 'LGP\\ReservationBundle\\Controller\\CartController::addCartAction',  ),  2 =>   array (    'profId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'profId',    ),    1 =>     array (      0 => 'text',      1 => '/reservation/cart/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_reservation_cart_remove' => array (  0 =>   array (    0 => 'key',  ),  1 =>   array (    '_controller' => 'LGP\\ReservationBundle\\Controller\\CartController::removeCartAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'key',    ),    1 =>     array (      0 => 'text',      1 => '/reservation/cart/remove',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_course_all_intitule' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LGP\\CourseBundle\\Controller\\CourseController::updateCourseDataAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/course/all/intitule',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_course_categories' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    '_controller' => 'LGP\\CourseBundle\\Controller\\CategorieController::indexAction',    'page' => 1,  ),  2 =>   array (    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/course/categories',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_course_find_category' => array (  0 =>   array (    0 => 'category',    1 => 'page',  ),  1 =>   array (    '_controller' => 'LGP\\CourseBundle\\Controller\\CategorieController::courseListAction',    'page' => 1,  ),  2 =>   array (    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'category',    ),    2 =>     array (      0 => 'text',      1 => '/course/search/categories',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_course_find' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    '_controller' => 'LGP\\CourseBundle\\Controller\\CourseController::searchAction',    'page' => 1,  ),  2 =>   array (    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/course/search/profs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_course_find_prof' => array (  0 =>   array (    0 => 'intitule_cours',    1 => 'page',  ),  1 =>   array (    '_controller' => 'LGP\\CourseBundle\\Controller\\CourseController::searchCourseAction',    'page' => 1,  ),  2 =>   array (    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'intitule_cours',    ),    2 =>     array (      0 => 'text',      1 => '/course/search/profs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_course_find_prof_refine' => array (  0 =>   array (    0 => 'ville',    1 => 'intitule_cours',    2 => 'page',  ),  1 =>   array (    '_controller' => 'LGP\\CourseBundle\\Controller\\CourseController::searchRefineAction',    'page' => 1,  ),  2 =>   array (    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'intitule_cours',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'ville',    ),    3 =>     array (      0 => 'text',      1 => '/course/search/profs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_course_find_prof_city' => array (  0 =>   array (    0 => 'ville',    1 => 'page',  ),  1 =>   array (    '_controller' => 'LGP\\CourseBundle\\Controller\\CourseController::searchCityAction',    'page' => 1,  ),  2 =>   array (    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'ville',    ),    2 =>     array (      0 => 'text',      1 => '/course/search/ville',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_course_update_classe' => array (  0 =>   array (    0 => 'profId',    1 => 'coursId',  ),  1 =>   array (    '_controller' => 'LGP\\CourseBundle\\Controller\\CourseController::updateClasseAction',  ),  2 =>   array (    'profId' => '\\d+',    'coursId' => '\\d+',    'method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'coursId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'profId',    ),    2 =>     array (      0 => 'text',      1 => '/course/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_course_profile_prof' => array (  0 =>   array (    0 => 'profId',  ),  1 =>   array (    '_controller' => 'LGP\\CourseBundle\\Controller\\EnseignementController::profileAction',  ),  2 =>   array (    'profId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'profId',    ),    1 =>     array (      0 => 'text',      1 => '/course/profile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_core_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LGP\\CoreBundle\\Controller\\LgpController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lgp_core_how_it_works' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LGP\\CoreBundle\\Controller\\LgpController::howAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/how-it-works',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\ProfileController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/profile/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LGP\\UserBundle\\Controller\\ProfileController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/profile/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/register/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/user/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::requestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::sendEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::resetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/user/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ChangePasswordController::changePasswordAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/profile/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_js_routing_js' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'fos_js_routing.controller:indexAction',    '_format' => 'js',  ),  2 =>   array (    '_format' => 'js|json',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'js|json',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/js/routing',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_admin_redirect' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::redirectAction',    'route' => 'sonata_admin_dashboard',    'permanent' => 'true',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_admin_dashboard' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CoreController::dashboardAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/dashboard',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_admin_retrieve_form_element' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sonata.admin.controller.admin:retrieveFormFieldElementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/core/get-form-field-element',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_admin_append_form_element' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sonata.admin.controller.admin:appendFormFieldElementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/core/append-form-field-element',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_admin_short_object_information' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'sonata.admin.controller.admin:getShortObjectDescriptionAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'html|json',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'html|json',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/admin/core/get-short-object-description',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_admin_set_object_field_value' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sonata.admin.controller.admin:setObjectFieldValueAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/core/set-object-field-value',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_admin_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CoreController::searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_admin_retrieve_autocomplete_items' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sonata.admin.controller.admin:retrieveAutocompleteItemsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/core/get-autocomplete-items',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_lgp_user_prof_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::listAction',    '_sonata_admin' => 'lgp.admin.prof',    '_sonata_name' => 'admin_lgp_user_prof_list',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/user/prof/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_lgp_user_prof_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::createAction',    '_sonata_admin' => 'lgp.admin.prof',    '_sonata_name' => 'admin_lgp_user_prof_create',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/user/prof/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_lgp_user_prof_batch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::batchAction',    '_sonata_admin' => 'lgp.admin.prof',    '_sonata_name' => 'admin_lgp_user_prof_batch',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/user/prof/batch',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_lgp_user_prof_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::editAction',    '_sonata_admin' => 'lgp.admin.prof',    '_sonata_name' => 'admin_lgp_user_prof_edit',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/user/prof',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_lgp_user_prof_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::deleteAction',    '_sonata_admin' => 'lgp.admin.prof',    '_sonata_name' => 'admin_lgp_user_prof_delete',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/user/prof',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_lgp_user_prof_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::showAction',    '_sonata_admin' => 'lgp.admin.prof',    '_sonata_name' => 'admin_lgp_user_prof_show',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/user/prof',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_lgp_user_prof_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::exportAction',    '_sonata_admin' => 'lgp.admin.prof',    '_sonata_name' => 'admin_lgp_user_prof_export',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/user/prof/export',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_lgp_user_remuneration_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::listAction',    '_sonata_admin' => 'lgp.admin.remuneration',    '_sonata_name' => 'admin_lgp_user_remuneration_list',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/remunerations/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_lgp_user_remuneration_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::createAction',    '_sonata_admin' => 'lgp.admin.remuneration',    '_sonata_name' => 'admin_lgp_user_remuneration_create',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/remunerations/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_lgp_user_remuneration_batch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::batchAction',    '_sonata_admin' => 'lgp.admin.remuneration',    '_sonata_name' => 'admin_lgp_user_remuneration_batch',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/remunerations/batch',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_lgp_user_remuneration_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::editAction',    '_sonata_admin' => 'lgp.admin.remuneration',    '_sonata_name' => 'admin_lgp_user_remuneration_edit',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/remunerations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_lgp_user_remuneration_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::deleteAction',    '_sonata_admin' => 'lgp.admin.remuneration',    '_sonata_name' => 'admin_lgp_user_remuneration_delete',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/remunerations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_lgp_user_remuneration_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::showAction',    '_sonata_admin' => 'lgp.admin.remuneration',    '_sonata_name' => 'admin_lgp_user_remuneration_show',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/remunerations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_lgp_user_remuneration_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::exportAction',    '_sonata_admin' => 'lgp.admin.remuneration',    '_sonata_name' => 'admin_lgp_user_remuneration_export',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/remunerations/export',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );
        }
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
