<?php

namespace LGP\CourseBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * EnseigneRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EnseigneRepository extends EntityRepository {

    public function getProfsByCours($cours, $page = 1, $max = 10) {
        if (!is_numeric($max)) {
            throw new InvalidArgumentException('Le nombre max par page est incorrect (valeur : ' . $max . ').');
        }

        $query = $this->_em->createQuery("SELECT DISTINCT e, p FROM LGPCourseBundle:Enseigne e JOIN e.prof p WHERE e.cours = :cours GROUP BY p.id");
        $query->setParameter('cours', $cours)
                ->setFirstResult(($page - 1) * $max)
                ->setMaxResults($max);
//        return $query->getResult();
        $paginator = new Paginator($query);
        return $paginator;
    }

    function countProfsByCours($cours) {
        $query = $this->_em->createQuery("SELECT COUNT(e) FROM (SELECT DISTINCT e, p FROM LGPCourseBundle:Enseigne e JOIN e.prof p WHERE e.cours = :cours GROUP BY p.id)");
        $query->setParameter('cours', $cours);
        return $query->getSingleScalarResult();
    }

    public function getCoursByProf($prof) {
        $query = $this->_em->createQuery("SELECT DISTINCT e, c FROM LGPCourseBundle:Enseigne e JOIN e.cours c WHERE e.prof = :prof GROUP BY c.id");

        $query->setParameter('prof', $prof);
//        $query->setMaxResults(2);

        return $query->getResult();
    }

}
